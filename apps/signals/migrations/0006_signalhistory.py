# Generated by Django 5.2.5 on 2025-09-27 11:49

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('signals', '0005_add_timeframe_and_entry_point_fields'),
    ]

    operations = [
        migrations.CreateModel(
            name='SignalHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symbol_name', models.CharField(help_text='Symbol name at time of archiving', max_length=20)),
                ('signal_type_name', models.CharField(help_text='Signal type name at time of archiving', max_length=20)),
                ('strength', models.CharField(max_length=20)),
                ('confidence_score', models.FloatField()),
                ('confidence_level', models.CharField(max_length=20)),
                ('entry_price', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('target_price', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('stop_loss', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('risk_reward_ratio', models.FloatField(blank=True, null=True)),
                ('timeframe', models.CharField(blank=True, max_length=10, null=True)),
                ('entry_point_type', models.CharField(blank=True, max_length=50, null=True)),
                ('entry_point_details', models.JSONField(blank=True, default=dict)),
                ('entry_zone_low', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('entry_zone_high', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('entry_confidence', models.FloatField(blank=True, null=True)),
                ('quality_score', models.FloatField()),
                ('is_valid', models.BooleanField(default=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('technical_score', models.FloatField(default=0.0)),
                ('sentiment_score', models.FloatField(default=0.0)),
                ('news_score', models.FloatField(default=0.0)),
                ('volume_score', models.FloatField(default=0.0)),
                ('pattern_score', models.FloatField(default=0.0)),
                ('economic_score', models.FloatField(default=0.0)),
                ('sector_score', models.FloatField(default=0.0)),
                ('is_executed', models.BooleanField(default=False)),
                ('executed_at', models.DateTimeField(blank=True, null=True)),
                ('execution_price', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('is_profitable', models.BooleanField(blank=True, null=True)),
                ('profit_loss', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('original_signal_id', models.IntegerField(help_text='ID of the original signal before archiving')),
                ('archived_at', models.DateTimeField(auto_now_add=True, help_text='When this signal was archived')),
                ('archived_reason', models.CharField(choices=[('HOURLY_ROTATION', 'Hourly Signal Rotation'), ('EXPIRED', 'Signal Expired'), ('MANUAL_ARCHIVE', 'Manually Archived'), ('SYSTEM_CLEANUP', 'System Cleanup')], default='HOURLY_ROTATION', max_length=50)),
                ('notes', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Signal History',
                'verbose_name_plural': 'Signal Histories',
                'ordering': ['-archived_at'],
                'indexes': [models.Index(fields=['symbol_name', 'archived_at'], name='signals_sig_symbol__265398_idx'), models.Index(fields=['signal_type_name', 'archived_at'], name='signals_sig_signal__d63914_idx'), models.Index(fields=['archived_at'], name='signals_sig_archive_ce1582_idx'), models.Index(fields=['archived_reason'], name='signals_sig_archive_e191d7_idx')],
            },
        ),
    ]
