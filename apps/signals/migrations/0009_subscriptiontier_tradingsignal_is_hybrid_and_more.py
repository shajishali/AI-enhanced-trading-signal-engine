# Generated by Django 5.2.5 on 2025-09-29 15:40

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('signals', '0008_mlfeature_mlmodel_mlmodelperformance_mlprediction_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SubscriptionTier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('BASIC', 'Basic'), ('PREMIUM', 'Premium'), ('PROFESSIONAL', 'Professional'), ('ENTERPRISE', 'Enterprise')], max_length=50, unique=True)),
                ('display_name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('monthly_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('yearly_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('max_signals_per_day', models.IntegerField(default=10)),
                ('max_symbols', models.IntegerField(default=5)),
                ('signal_types', models.JSONField(default=list, help_text='Allowed signal types')),
                ('has_rule_based_signals', models.BooleanField(default=True)),
                ('has_ml_signals', models.BooleanField(default=False)),
                ('has_hybrid_signals', models.BooleanField(default=False)),
                ('has_api_access', models.BooleanField(default=False)),
                ('has_webhook_access', models.BooleanField(default=False)),
                ('has_priority_support', models.BooleanField(default=False)),
                ('ml_model_access', models.JSONField(default=list, help_text='Available ML models')),
                ('ml_confidence_threshold', models.FloatField(default=0.7)),
                ('position_sizing_enabled', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Subscription Tier',
                'verbose_name_plural': 'Subscription Tiers',
                'ordering': ['monthly_price'],
            },
        ),
        migrations.AddField(
            model_name='tradingsignal',
            name='is_hybrid',
            field=models.BooleanField(default=False, help_text='Is this a hybrid signal (rule + ML)'),
        ),
        migrations.AddField(
            model_name='tradingsignal',
            name='metadata',
            field=models.JSONField(blank=True, default=dict, help_text='Additional signal metadata'),
        ),
        migrations.CreateModel(
            name='UserSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('EXPIRED', 'Expired'), ('CANCELLED', 'Cancelled'), ('PENDING', 'Pending')], default='PENDING', max_length=20)),
                ('billing_cycle', models.CharField(choices=[('MONTHLY', 'Monthly'), ('YEARLY', 'Yearly')], default='MONTHLY', max_length=20)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('next_billing_date', models.DateTimeField()),
                ('signals_used_today', models.IntegerField(default=0)),
                ('signals_used_this_month', models.IntegerField(default=0)),
                ('last_reset_date', models.DateTimeField(auto_now_add=True)),
                ('payment_method', models.CharField(blank=True, max_length=50)),
                ('payment_status', models.CharField(default='PENDING', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='signals.subscriptiontier')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Subscription',
                'verbose_name_plural': 'User Subscriptions',
            },
        ),
        migrations.CreateModel(
            name='SignalAccessLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_type', models.CharField(help_text='API, Dashboard, Webhook, etc.', max_length=20)),
                ('signal_type', models.CharField(max_length=20)),
                ('is_hybrid', models.BooleanField(default=False)),
                ('ml_model_used', models.CharField(blank=True, max_length=100)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('signal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='signals.tradingsignal')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='signals.usersubscription')),
            ],
            options={
                'verbose_name': 'Signal Access Log',
                'verbose_name_plural': 'Signal Access Logs',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.AddIndex(
            model_name='usersubscription',
            index=models.Index(fields=['user', 'status'], name='signals_use_user_id_859d5f_idx'),
        ),
        migrations.AddIndex(
            model_name='usersubscription',
            index=models.Index(fields=['end_date'], name='signals_use_end_dat_b5e2a2_idx'),
        ),
        migrations.AddIndex(
            model_name='signalaccesslog',
            index=models.Index(fields=['user', 'timestamp'], name='signals_sig_user_id_2e3e33_idx'),
        ),
        migrations.AddIndex(
            model_name='signalaccesslog',
            index=models.Index(fields=['subscription', 'timestamp'], name='signals_sig_subscri_b9b1ee_idx'),
        ),
    ]
