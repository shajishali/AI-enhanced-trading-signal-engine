# Generated by Django 5.2.5 on 2025-09-29 14:31

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('signals', '0006_signalhistory'),
        ('trading', '0002_symbol_sector'),
    ]

    operations = [
        migrations.CreateModel(
            name='BacktestResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('strategy_name', models.CharField(max_length=100)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('initial_capital', models.DecimalField(decimal_places=2, max_digits=15)),
                ('commission_rate', models.DecimalField(decimal_places=6, default=0.001, max_digits=8)),
                ('slippage_rate', models.DecimalField(decimal_places=6, default=0.0005, max_digits=8)),
                ('total_trades', models.IntegerField(default=0)),
                ('winning_trades', models.IntegerField(default=0)),
                ('losing_trades', models.IntegerField(default=0)),
                ('win_rate', models.FloatField(blank=True, null=True)),
                ('total_return', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('total_return_percentage', models.FloatField(blank=True, null=True)),
                ('annualized_return', models.FloatField(blank=True, null=True)),
                ('sharpe_ratio', models.FloatField(blank=True, null=True)),
                ('sortino_ratio', models.FloatField(blank=True, null=True)),
                ('calmar_ratio', models.FloatField(blank=True, null=True)),
                ('max_drawdown', models.FloatField(blank=True, null=True)),
                ('max_drawdown_duration', models.IntegerField(blank=True, help_text='Duration in days', null=True)),
                ('profit_factor', models.FloatField(blank=True, null=True)),
                ('average_win', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('average_loss', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('volatility', models.FloatField(blank=True, null=True)),
                ('var_95', models.FloatField(blank=True, help_text='Value at Risk 95%', null=True)),
                ('expected_shortfall', models.FloatField(blank=True, null=True)),
                ('final_capital', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('final_equity', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notes', models.TextField(blank=True)),
                ('symbol', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trading.symbol')),
            ],
            options={
                'verbose_name': 'Backtest Result',
                'verbose_name_plural': 'Backtest Results',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['strategy_name', 'symbol'], name='signals_bac_strateg_d2a493_idx'), models.Index(fields=['start_date', 'end_date'], name='signals_bac_start_d_c08d86_idx'), models.Index(fields=['win_rate', 'sharpe_ratio'], name='signals_bac_win_rat_eba5eb_idx')],
            },
        ),
        migrations.CreateModel(
            name='TradeLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trade_type', models.CharField(choices=[('BUY', 'Buy'), ('SELL', 'Sell')], max_length=4)),
                ('entry_price', models.DecimalField(decimal_places=6, max_digits=15)),
                ('exit_price', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('quantity', models.DecimalField(decimal_places=6, max_digits=15)),
                ('stop_loss', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('take_profit', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('risk_reward_ratio', models.FloatField(blank=True, null=True)),
                ('entry_time', models.DateTimeField()),
                ('exit_time', models.DateTimeField(blank=True, null=True)),
                ('exit_reason', models.CharField(blank=True, choices=[('TAKE_PROFIT', 'Take Profit'), ('STOP_LOSS', 'Stop Loss'), ('SIGNAL_EXIT', 'Signal Exit'), ('TIME_EXIT', 'Time-based Exit'), ('MANUAL_EXIT', 'Manual Exit')], max_length=20, null=True)),
                ('profit_loss', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('profit_loss_percentage', models.FloatField(blank=True, null=True)),
                ('commission', models.DecimalField(decimal_places=6, default=0.0, max_digits=10)),
                ('slippage', models.DecimalField(decimal_places=6, default=0.0, max_digits=10)),
                ('net_profit_loss', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('is_open', models.BooleanField(default=True)),
                ('is_profitable', models.BooleanField(blank=True, null=True)),
                ('backtest_id', models.CharField(blank=True, help_text='ID for grouping trades from same backtest', max_length=100, null=True)),
                ('strategy_name', models.CharField(blank=True, max_length=100, null=True)),
                ('timeframe', models.CharField(blank=True, max_length=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notes', models.TextField(blank=True)),
                ('signal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='signals.tradingsignal')),
                ('symbol', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trading.symbol')),
            ],
            options={
                'verbose_name': 'Trade Log',
                'verbose_name_plural': 'Trade Logs',
                'ordering': ['-entry_time'],
                'indexes': [models.Index(fields=['symbol', 'entry_time'], name='signals_tra_symbol__1a7c44_idx'), models.Index(fields=['backtest_id'], name='signals_tra_backtes_d909bb_idx'), models.Index(fields=['strategy_name', 'entry_time'], name='signals_tra_strateg_91a0b9_idx'), models.Index(fields=['is_open', 'entry_time'], name='signals_tra_is_open_324e4b_idx'), models.Index(fields=['is_profitable'], name='signals_tra_is_prof_58a59d_idx')],
            },
        ),
    ]
