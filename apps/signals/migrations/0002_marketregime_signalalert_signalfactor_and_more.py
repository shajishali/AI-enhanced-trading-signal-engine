# Generated by Django 4.2.7 on 2025-08-09 05:41

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('trading', '0001_initial'),
        ('signals', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='MarketRegime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('BULL', 'Bull Market'), ('BEAR', 'Bear Market'), ('SIDEWAYS', 'Sideways Market'), ('VOLATILE', 'High Volatility'), ('LOW_VOL', 'Low Volatility')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('volatility_level', models.FloatField(help_text='Market volatility level (0-1)', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('trend_strength', models.FloatField(help_text='Trend strength (-1 to 1)', validators=[django.core.validators.MinValueValidator(-1.0), django.core.validators.MaxValueValidator(1.0)])),
                ('confidence', models.FloatField(help_text='Regime classification confidence', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Market Regime',
                'verbose_name_plural': 'Market Regimes',
            },
        ),
        migrations.CreateModel(
            name='SignalAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_type', models.CharField(choices=[('SIGNAL_GENERATED', 'Signal Generated'), ('SIGNAL_EXPIRED', 'Signal Expired'), ('SIGNAL_EXECUTED', 'Signal Executed'), ('PERFORMANCE_ALERT', 'Performance Alert'), ('SYSTEM_ALERT', 'System Alert')], max_length=20)),
                ('priority', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('CRITICAL', 'Critical')], default='MEDIUM', max_length=10)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Signal Alert',
                'verbose_name_plural': 'Signal Alerts',
            },
        ),
        migrations.CreateModel(
            name='SignalFactor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('factor_type', models.CharField(choices=[('TECHNICAL', 'Technical Indicator'), ('SENTIMENT', 'Sentiment Analysis'), ('NEWS', 'News Event'), ('VOLUME', 'Volume Analysis'), ('PATTERN', 'Chart Pattern'), ('CORRELATION', 'Correlation Analysis')], max_length=20)),
                ('weight', models.FloatField(default=0.1, help_text='Weight of this factor in signal calculation (0-1)', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Signal Factor',
                'verbose_name_plural': 'Signal Factors',
            },
        ),
        migrations.CreateModel(
            name='SignalFactorContribution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField(help_text='Factor score (-1 to 1)')),
                ('weight', models.FloatField(help_text='Weight applied to this factor')),
                ('contribution', models.FloatField(help_text='Weighted contribution to final signal')),
                ('details', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'verbose_name': 'Signal Factor Contribution',
                'verbose_name_plural': 'Signal Factor Contributions',
            },
        ),
        migrations.CreateModel(
            name='SignalPerformance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period_type', models.CharField(choices=[('1H', '1 Hour'), ('4H', '4 Hours'), ('1D', '1 Day'), ('1W', '1 Week'), ('1M', '1 Month')], max_length=3)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('total_signals', models.IntegerField(default=0)),
                ('profitable_signals', models.IntegerField(default=0)),
                ('win_rate', models.FloatField(help_text='Win rate (0-1)', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('average_profit', models.DecimalField(decimal_places=6, default=0, max_digits=10)),
                ('average_loss', models.DecimalField(decimal_places=6, default=0, max_digits=10)),
                ('profit_factor', models.FloatField(default=0.0)),
                ('max_drawdown', models.FloatField(default=0.0)),
                ('average_confidence', models.FloatField(default=0.0)),
                ('average_quality_score', models.FloatField(default=0.0)),
                ('signal_accuracy', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Signal Performance',
                'verbose_name_plural': 'Signal Performances',
            },
        ),
        migrations.CreateModel(
            name='TradingSignal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('strength', models.CharField(choices=[('WEAK', 'Weak'), ('MODERATE', 'Moderate'), ('STRONG', 'Strong'), ('VERY_STRONG', 'Very Strong')], max_length=20)),
                ('confidence_score', models.FloatField(help_text='Confidence score (0-1)', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('confidence_level', models.CharField(choices=[('LOW', 'Low (<50%)'), ('MEDIUM', 'Medium (50-70%)'), ('HIGH', 'High (70-85%)'), ('VERY_HIGH', 'Very High (>85%)')], max_length=20)),
                ('entry_price', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('target_price', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('stop_loss', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('risk_reward_ratio', models.FloatField(blank=True, null=True)),
                ('quality_score', models.FloatField(help_text='Overall signal quality score', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('is_valid', models.BooleanField(default=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('technical_score', models.FloatField(default=0.0)),
                ('sentiment_score', models.FloatField(default=0.0)),
                ('news_score', models.FloatField(default=0.0)),
                ('volume_score', models.FloatField(default=0.0)),
                ('pattern_score', models.FloatField(default=0.0)),
                ('is_executed', models.BooleanField(default=False)),
                ('executed_at', models.DateTimeField(blank=True, null=True)),
                ('execution_price', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('is_profitable', models.BooleanField(blank=True, null=True)),
                ('profit_loss', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notes', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Trading Signal',
                'verbose_name_plural': 'Trading Signals',
            },
        ),
        migrations.RemoveField(
            model_name='modelperformance',
            name='ai_model',
        ),
        migrations.RemoveField(
            model_name='modelperformance',
            name='symbol',
        ),
        migrations.RemoveField(
            model_name='signal',
            name='ai_model',
        ),
        migrations.RemoveField(
            model_name='signal',
            name='signal_type',
        ),
        migrations.RemoveField(
            model_name='signal',
            name='symbol',
        ),
        migrations.RemoveField(
            model_name='signalexecution',
            name='signal',
        ),
        migrations.RemoveField(
            model_name='signalexecution',
            name='user',
        ),
        migrations.AddField(
            model_name='signaltype',
            name='color',
            field=models.CharField(default='#000000', max_length=7),
        ),
        migrations.AlterField(
            model_name='signaltype',
            name='description',
            field=models.TextField(blank=True),
        ),
        migrations.AlterField(
            model_name='signaltype',
            name='name',
            field=models.CharField(choices=[('BUY', 'Buy Signal'), ('SELL', 'Sell Signal'), ('HOLD', 'Hold Signal'), ('STRONG_BUY', 'Strong Buy'), ('STRONG_SELL', 'Strong Sell')], max_length=20, unique=True),
        ),
        migrations.DeleteModel(
            name='AIModel',
        ),
        migrations.DeleteModel(
            name='ModelPerformance',
        ),
        migrations.DeleteModel(
            name='Signal',
        ),
        migrations.DeleteModel(
            name='SignalExecution',
        ),
        migrations.AddField(
            model_name='tradingsignal',
            name='signal_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='signals.signaltype'),
        ),
        migrations.AddField(
            model_name='tradingsignal',
            name='symbol',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trading.symbol'),
        ),
        migrations.AddIndex(
            model_name='signalperformance',
            index=models.Index(fields=['period_type', 'start_date'], name='signals_sig_period__879303_idx'),
        ),
        migrations.AddField(
            model_name='signalfactorcontribution',
            name='factor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='signals.signalfactor'),
        ),
        migrations.AddField(
            model_name='signalfactorcontribution',
            name='signal',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='factor_contributions', to='signals.tradingsignal'),
        ),
        migrations.AddField(
            model_name='signalalert',
            name='signal',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='signals.tradingsignal'),
        ),
        migrations.AddIndex(
            model_name='marketregime',
            index=models.Index(fields=['name', 'created_at'], name='signals_mar_name_6f4259_idx'),
        ),
        migrations.AddIndex(
            model_name='tradingsignal',
            index=models.Index(fields=['symbol', 'created_at'], name='signals_tra_symbol__b4f201_idx'),
        ),
        migrations.AddIndex(
            model_name='tradingsignal',
            index=models.Index(fields=['signal_type', 'confidence_score'], name='signals_tra_signal__689223_idx'),
        ),
        migrations.AddIndex(
            model_name='tradingsignal',
            index=models.Index(fields=['is_valid', 'expires_at'], name='signals_tra_is_vali_c6d9f8_idx'),
        ),
        migrations.AddIndex(
            model_name='signalalert',
            index=models.Index(fields=['alert_type', 'created_at'], name='signals_sig_alert_t_7d6b95_idx'),
        ),
        migrations.AddIndex(
            model_name='signalalert',
            index=models.Index(fields=['priority', 'is_read'], name='signals_sig_priorit_bb5a83_idx'),
        ),
    ]
