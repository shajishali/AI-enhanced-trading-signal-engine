# Generated by Django 5.2.5 on 2025-09-29 14:57

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('signals', '0007_backtestresult_tradelog'),
        ('trading', '0002_symbol_sector'),
    ]

    operations = [
        migrations.CreateModel(
            name='MLFeature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('feature_type', models.CharField(choices=[('TECHNICAL', 'Technical Indicator'), ('PRICE', 'Price-based Feature'), ('VOLUME', 'Volume-based Feature'), ('SENTIMENT', 'Sentiment Feature'), ('FUNDAMENTAL', 'Fundamental Feature'), ('TIME', 'Time-based Feature'), ('DERIVED', 'Derived Feature')], max_length=20)),
                ('description', models.TextField()),
                ('calculation_method', models.CharField(help_text='How the feature is calculated', max_length=200)),
                ('parameters', models.JSONField(blank=True, default=dict)),
                ('dependencies', models.JSONField(blank=True, default=list, help_text='Other features this depends on')),
                ('is_lagging', models.BooleanField(default=False, help_text='Does this feature use future data?')),
                ('lag_periods', models.IntegerField(default=0, help_text='Number of periods to lag')),
                ('window_size', models.IntegerField(blank=True, help_text='Window size for calculations', null=True)),
                ('models_using', models.JSONField(blank=True, default=list, help_text='Models that use this feature')),
                ('importance_score', models.FloatField(blank=True, help_text='Average feature importance', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'ML Feature',
                'verbose_name_plural': 'ML Features',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['feature_type', 'is_active'], name='signals_mlf_feature_cc8c6f_idx'), models.Index(fields=['name'], name='signals_mlf_name_1a40a1_idx')],
            },
        ),
        migrations.CreateModel(
            name='MLModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('model_type', models.CharField(choices=[('XGBOOST', 'XGBoost'), ('LIGHTGBM', 'LightGBM'), ('LSTM', 'LSTM'), ('GRU', 'GRU'), ('TRANSFORMER', 'Transformer'), ('ENSEMBLE', 'Ensemble')], max_length=20)),
                ('version', models.CharField(default='1.0', max_length=20)),
                ('status', models.CharField(choices=[('TRAINING', 'Training'), ('TRAINED', 'Trained'), ('DEPLOYED', 'Deployed'), ('ARCHIVED', 'Archived'), ('FAILED', 'Failed')], default='TRAINING', max_length=20)),
                ('target_variable', models.CharField(help_text="Target variable (e.g., 'next_return', 'signal_direction')", max_length=50)),
                ('prediction_horizon', models.IntegerField(help_text='Prediction horizon in hours')),
                ('features_used', models.JSONField(default=list, help_text='List of features used in training')),
                ('training_start_date', models.DateTimeField()),
                ('training_end_date', models.DateTimeField()),
                ('validation_start_date', models.DateTimeField()),
                ('validation_end_date', models.DateTimeField()),
                ('accuracy', models.FloatField(blank=True, null=True)),
                ('precision', models.FloatField(blank=True, null=True)),
                ('recall', models.FloatField(blank=True, null=True)),
                ('f1_score', models.FloatField(blank=True, null=True)),
                ('auc_score', models.FloatField(blank=True, null=True)),
                ('mse', models.FloatField(blank=True, help_text='Mean Squared Error', null=True)),
                ('mae', models.FloatField(blank=True, help_text='Mean Absolute Error', null=True)),
                ('model_file_path', models.CharField(blank=True, max_length=500, null=True)),
                ('scaler_file_path', models.CharField(blank=True, max_length=500, null=True)),
                ('feature_importance', models.JSONField(blank=True, default=dict)),
                ('hyperparameters', models.JSONField(blank=True, default=dict)),
                ('training_samples', models.IntegerField(blank=True, null=True)),
                ('validation_samples', models.IntegerField(blank=True, null=True)),
                ('training_time_seconds', models.IntegerField(blank=True, null=True)),
                ('deployed_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('confidence_threshold', models.FloatField(default=0.7, help_text='Minimum confidence for predictions')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notes', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'ML Model',
                'verbose_name_plural': 'ML Models',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['model_type', 'status'], name='signals_mlm_model_t_adc3af_idx'), models.Index(fields=['is_active', 'deployed_at'], name='signals_mlm_is_acti_2f43bb_idx'), models.Index(fields=['created_at'], name='signals_mlm_created_76d32f_idx')],
            },
        ),
        migrations.CreateModel(
            name='MLModelPerformance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('evaluation_date', models.DateTimeField()),
                ('accuracy', models.FloatField(blank=True, null=True)),
                ('precision', models.FloatField(blank=True, null=True)),
                ('recall', models.FloatField(blank=True, null=True)),
                ('f1_score', models.FloatField(blank=True, null=True)),
                ('auc_score', models.FloatField(blank=True, null=True)),
                ('mse', models.FloatField(blank=True, null=True)),
                ('mae', models.FloatField(blank=True, null=True)),
                ('total_predictions', models.IntegerField(default=0)),
                ('correct_predictions', models.IntegerField(default=0)),
                ('avg_confidence', models.FloatField(blank=True, null=True)),
                ('evaluation_period_days', models.IntegerField(default=30)),
                ('symbols_evaluated', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='signals.mlmodel')),
            ],
            options={
                'verbose_name': 'ML Model Performance',
                'verbose_name_plural': 'ML Model Performances',
                'ordering': ['-evaluation_date'],
                'indexes': [models.Index(fields=['model', 'evaluation_date'], name='signals_mlm_model_i_95e039_idx'), models.Index(fields=['evaluation_date'], name='signals_mlm_evaluat_45e451_idx')],
            },
        ),
        migrations.CreateModel(
            name='MLPrediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prediction_type', models.CharField(choices=[('SIGNAL_DIRECTION', 'Signal Direction (Buy/Sell/Hold)'), ('PRICE_CHANGE', 'Price Change Prediction'), ('VOLATILITY', 'Volatility Prediction'), ('SENTIMENT', 'Sentiment Prediction'), ('RISK_SCORE', 'Risk Score')], max_length=20)),
                ('prediction_value', models.FloatField()),
                ('confidence_score', models.FloatField()),
                ('prediction_probabilities', models.JSONField(blank=True, default=dict)),
                ('input_features', models.JSONField(blank=True, default=dict)),
                ('feature_values', models.JSONField(blank=True, default=dict)),
                ('prediction_timestamp', models.DateTimeField()),
                ('prediction_horizon_hours', models.IntegerField()),
                ('actual_value', models.FloatField(blank=True, help_text='Actual value when available', null=True)),
                ('is_correct', models.BooleanField(blank=True, null=True)),
                ('prediction_error', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='signals.mlmodel')),
                ('symbol', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trading.symbol')),
            ],
            options={
                'verbose_name': 'ML Prediction',
                'verbose_name_plural': 'ML Predictions',
                'ordering': ['-prediction_timestamp'],
                'indexes': [models.Index(fields=['model', 'symbol', 'prediction_timestamp'], name='signals_mlp_model_i_47f16c_idx'), models.Index(fields=['prediction_type', 'prediction_timestamp'], name='signals_mlp_predict_f7875b_idx'), models.Index(fields=['confidence_score'], name='signals_mlp_confide_89d9fc_idx')],
            },
        ),
        migrations.CreateModel(
            name='MLTrainingSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_name', models.CharField(max_length=200)),
                ('status', models.CharField(choices=[('STARTED', 'Started'), ('DATA_PREPARATION', 'Data Preparation'), ('FEATURE_ENGINEERING', 'Feature Engineering'), ('TRAINING', 'Training'), ('VALIDATION', 'Validation'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed')], default='STARTED', max_length=20)),
                ('training_config', models.JSONField(blank=True, default=dict)),
                ('hyperparameters', models.JSONField(blank=True, default=dict)),
                ('current_step', models.CharField(default='Started', max_length=50)),
                ('progress_percentage', models.FloatField(default=0.0)),
                ('training_loss', models.JSONField(blank=True, default=list)),
                ('validation_loss', models.JSONField(blank=True, default=list)),
                ('training_metrics', models.JSONField(blank=True, default=dict)),
                ('validation_metrics', models.JSONField(blank=True, default=dict)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('duration_seconds', models.IntegerField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('error_traceback', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='signals.mlmodel')),
            ],
            options={
                'verbose_name': 'ML Training Session',
                'verbose_name_plural': 'ML Training Sessions',
                'ordering': ['-started_at'],
                'indexes': [models.Index(fields=['model', 'status'], name='signals_mlt_model_i_57c070_idx'), models.Index(fields=['started_at'], name='signals_mlt_started_6a533f_idx')],
            },
        ),
    ]
