# Generated by Django 4.2.7 on 2025-08-09 05:08

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('trading', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='NewsSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('url', models.URLField()),
                ('api_key', models.CharField(blank=True, max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'News Source',
                'verbose_name_plural': 'News Sources',
            },
        ),
        migrations.CreateModel(
            name='SentimentModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('model_type', models.CharField(max_length=50)),
                ('version', models.CharField(max_length=20)),
                ('file_path', models.CharField(max_length=500)),
                ('accuracy_score', models.FloatField()),
                ('precision_score', models.FloatField()),
                ('recall_score', models.FloatField()),
                ('f1_score', models.FloatField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Sentiment Model',
                'verbose_name_plural': 'Sentiment Models',
            },
        ),
        migrations.CreateModel(
            name='SocialMediaSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('platform', models.CharField(max_length=50)),
                ('api_key', models.CharField(blank=True, max_length=255)),
                ('api_secret', models.CharField(blank=True, max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Social Media Source',
                'verbose_name_plural': 'Social Media Sources',
            },
        ),
        migrations.CreateModel(
            name='SocialMediaPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.CharField(max_length=50)),
                ('post_id', models.CharField(max_length=255, unique=True)),
                ('author', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('language', models.CharField(default='en', max_length=10)),
                ('followers_count', models.IntegerField(default=0)),
                ('engagement_score', models.FloatField(default=0.0)),
                ('sentiment_score', models.FloatField(blank=True, null=True)),
                ('sentiment_label', models.CharField(blank=True, max_length=20)),
                ('confidence_score', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField()),
                ('processed_at', models.DateTimeField(auto_now_add=True)),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sentiment.socialmediasource')),
            ],
            options={
                'verbose_name': 'Social Media Post',
                'verbose_name_plural': 'Social Media Posts',
            },
        ),
        migrations.CreateModel(
            name='SentimentAggregate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timeframe', models.CharField(max_length=20)),
                ('social_sentiment_score', models.FloatField()),
                ('news_sentiment_score', models.FloatField()),
                ('combined_sentiment_score', models.FloatField()),
                ('bullish_mentions', models.IntegerField(default=0)),
                ('bearish_mentions', models.IntegerField(default=0)),
                ('neutral_mentions', models.IntegerField(default=0)),
                ('total_mentions', models.IntegerField(default=0)),
                ('confidence_score', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trading.symbol')),
            ],
            options={
                'verbose_name': 'Sentiment Aggregate',
                'verbose_name_plural': 'Sentiment Aggregates',
            },
        ),
        migrations.CreateModel(
            name='NewsArticle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('content', models.TextField()),
                ('url', models.URLField()),
                ('published_at', models.DateTimeField()),
                ('language', models.CharField(default='en', max_length=10)),
                ('sentiment_score', models.FloatField(blank=True, null=True)),
                ('sentiment_label', models.CharField(blank=True, max_length=20)),
                ('confidence_score', models.FloatField(default=0.0)),
                ('impact_score', models.FloatField(default=0.0)),
                ('processed_at', models.DateTimeField(auto_now_add=True)),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sentiment.newssource')),
            ],
            options={
                'verbose_name': 'News Article',
                'verbose_name_plural': 'News Articles',
            },
        ),
        migrations.CreateModel(
            name='Influencer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.CharField(max_length=50)),
                ('username', models.CharField(max_length=255)),
                ('display_name', models.CharField(max_length=255)),
                ('followers_count', models.BigIntegerField(default=0)),
                ('engagement_rate', models.FloatField(default=0.0)),
                ('impact_score', models.FloatField(default=0.0)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('last_activity', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Influencer',
                'verbose_name_plural': 'Influencers',
                'indexes': [models.Index(fields=['platform', 'impact_score'], name='sentiment_i_platfor_c59c58_idx')],
                'unique_together': {('platform', 'username')},
            },
        ),
        migrations.CreateModel(
            name='CryptoMention',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mention_type', models.CharField(max_length=20)),
                ('sentiment_score', models.FloatField()),
                ('sentiment_label', models.CharField(max_length=20)),
                ('confidence_score', models.FloatField(default=0.0)),
                ('impact_weight', models.FloatField(default=1.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trading.symbol')),
                ('news_article', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sentiment.newsarticle')),
                ('social_post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sentiment.socialmediapost')),
            ],
            options={
                'verbose_name': 'Crypto Mention',
                'verbose_name_plural': 'Crypto Mentions',
            },
        ),
        migrations.AddIndex(
            model_name='socialmediapost',
            index=models.Index(fields=['platform', 'created_at'], name='sentiment_s_platfor_f469ef_idx'),
        ),
        migrations.AddIndex(
            model_name='socialmediapost',
            index=models.Index(fields=['sentiment_label', 'created_at'], name='sentiment_s_sentime_59d87f_idx'),
        ),
        migrations.AddIndex(
            model_name='sentimentaggregate',
            index=models.Index(fields=['asset', 'timeframe', 'created_at'], name='sentiment_s_asset_i_ebbf4c_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='sentimentaggregate',
            unique_together={('asset', 'timeframe', 'created_at')},
        ),
        migrations.AddIndex(
            model_name='newsarticle',
            index=models.Index(fields=['published_at'], name='sentiment_n_publish_fbb5d1_idx'),
        ),
        migrations.AddIndex(
            model_name='newsarticle',
            index=models.Index(fields=['sentiment_label', 'published_at'], name='sentiment_n_sentime_446016_idx'),
        ),
        migrations.AddIndex(
            model_name='cryptomention',
            index=models.Index(fields=['asset', 'mention_type', 'created_at'], name='sentiment_c_asset_i_3681a9_idx'),
        ),
        migrations.AddIndex(
            model_name='cryptomention',
            index=models.Index(fields=['sentiment_label', 'created_at'], name='sentiment_c_sentime_70041f_idx'),
        ),
    ]
