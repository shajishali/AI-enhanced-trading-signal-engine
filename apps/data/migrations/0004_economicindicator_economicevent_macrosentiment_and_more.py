# Generated by Django 5.2.5 on 2025-08-21 04:29

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('data', '0003_technicalindicator_source'),
    ]

    operations = [
        migrations.CreateModel(
            name='EconomicIndicator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('indicator_type', models.CharField(choices=[('GDP', 'Gross Domestic Product'), ('INFLATION', 'Inflation Rate'), ('UNEMPLOYMENT', 'Unemployment Rate'), ('INTEREST_RATE', 'Interest Rate'), ('CPI', 'Consumer Price Index'), ('PPI', 'Producer Price Index'), ('RETAIL_SALES', 'Retail Sales'), ('HOUSING_STARTS', 'Housing Starts'), ('INDUSTRIAL_PRODUCTION', 'Industrial Production'), ('CONSUMER_CONFIDENCE', 'Consumer Confidence')], max_length=25)),
                ('country', models.CharField(choices=[('US', 'United States'), ('EU', 'European Union'), ('CN', 'China'), ('JP', 'Japan'), ('GB', 'United Kingdom'), ('CA', 'Canada'), ('AU', 'Australia'), ('GLOBAL', 'Global')], max_length=10)),
                ('value', models.DecimalField(decimal_places=6, max_digits=15)),
                ('previous_value', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('expected_value', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('unit', models.CharField(default='%', max_length=20)),
                ('timestamp', models.DateTimeField()),
                ('release_date', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='data.datasource')),
            ],
        ),
        migrations.CreateModel(
            name='EconomicEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('country', models.CharField(choices=[('US', 'United States'), ('EU', 'European Union'), ('CN', 'China'), ('JP', 'Japan'), ('GB', 'United Kingdom'), ('CA', 'Canada'), ('AU', 'Australia'), ('GLOBAL', 'Global')], max_length=10)),
                ('event_type', models.CharField(choices=[('ANNOUNCEMENT', 'Economic Announcement'), ('POLICY_DECISION', 'Policy Decision'), ('REPORT_RELEASE', 'Report Release'), ('SPEECH', 'Central Bank Speech'), ('MEETING', 'Economic Meeting')], max_length=20)),
                ('impact_level', models.CharField(choices=[('LOW', 'Low Impact'), ('MEDIUM', 'Medium Impact'), ('HIGH', 'High Impact'), ('CRITICAL', 'Critical Impact')], max_length=10)),
                ('scheduled_date', models.DateTimeField()),
                ('actual_date', models.DateTimeField(blank=True, null=True)),
                ('market_impact_score', models.FloatField(default=0.0, help_text='Expected market impact (-1 negative, 1 positive)', validators=[django.core.validators.MinValueValidator(-1.0), django.core.validators.MaxValueValidator(1.0)])),
                ('volatility_impact', models.FloatField(default=0.0, help_text='Expected volatility increase (0-1)', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('is_completed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('related_indicators', models.ManyToManyField(blank=True, to='data.economicindicator')),
            ],
        ),
        migrations.CreateModel(
            name='MacroSentiment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(choices=[('US', 'United States'), ('EU', 'European Union'), ('CN', 'China'), ('JP', 'Japan'), ('GB', 'United Kingdom'), ('CA', 'Canada'), ('AU', 'Australia'), ('GLOBAL', 'Global')], max_length=10)),
                ('sentiment_score', models.FloatField(help_text='Sentiment score from -1 (very bearish) to 1 (very bullish)', validators=[django.core.validators.MinValueValidator(-1.0), django.core.validators.MaxValueValidator(1.0)])),
                ('sentiment_level', models.CharField(choices=[('VERY_BEARISH', 'Very Bearish'), ('BEARISH', 'Bearish'), ('NEUTRAL', 'Neutral'), ('BULLISH', 'Bullish'), ('VERY_BULLISH', 'Very Bullish')], max_length=15)),
                ('confidence_score', models.FloatField(help_text='Confidence in sentiment analysis (0-1)', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('gdp_impact', models.FloatField(default=0.0)),
                ('inflation_impact', models.FloatField(default=0.0)),
                ('employment_impact', models.FloatField(default=0.0)),
                ('monetary_policy_impact', models.FloatField(default=0.0)),
                ('calculation_timestamp', models.DateTimeField()),
                ('data_period_start', models.DateTimeField()),
                ('data_period_end', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'indexes': [models.Index(fields=['country', 'calculation_timestamp'], name='data_macros_country_b5e20d_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='economicindicator',
            index=models.Index(fields=['indicator_type', 'country', 'timestamp'], name='data_econom_indicat_49c78d_idx'),
        ),
        migrations.AddIndex(
            model_name='economicindicator',
            index=models.Index(fields=['release_date'], name='data_econom_release_3ebdb2_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='economicindicator',
            unique_together={('indicator_type', 'country', 'timestamp')},
        ),
        migrations.AddIndex(
            model_name='economicevent',
            index=models.Index(fields=['scheduled_date', 'impact_level'], name='data_econom_schedul_b00404_idx'),
        ),
        migrations.AddIndex(
            model_name='economicevent',
            index=models.Index(fields=['country', 'scheduled_date'], name='data_econom_country_89b788_idx'),
        ),
    ]
