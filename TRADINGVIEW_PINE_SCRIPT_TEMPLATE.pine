//@version=5
indicator("AI Trading Signals Verification", overlay=true, max_labels_count=500)

// ============================================================================
// AI TRADING SIGNALS VERIFICATION SCRIPT FOR TRADINGVIEW
// ============================================================================
// This Pine Script helps verify AI-generated trading signals by plotting
// them on TradingView charts for manual verification.
//
// Instructions:
// 1. Export signals from AI Trading Engine as CSV
// 2. Manually input signal data below or use CSV import
// 3. Run this script to visualize signals on chart
// 4. Verify each signal against actual price action
//
// Author: AI Trading Engine Team
// Version: 1.0
// Date: January 2025
// ============================================================================

// Input Parameters
group_signals = "Signal Configuration"
show_buy_signals = input.bool(true, "Show BUY Signals", group=group_signals)
show_sell_signals = input.bool(true, "Show SELL Signals", group=group_signals)
signal_size = input.string("Small", "Signal Size", options=["Tiny", "Small", "Normal", "Large"], group=group_signals)

group_display = "Display Options"
show_labels = input.bool(true, "Show Signal Labels", group=group_display)
show_lines = input.bool(true, "Show Entry Lines", group=group_display)
show_targets = input.bool(false, "Show Target Prices", group=group_display)
show_stops = input.bool(false, "Show Stop Losses", group=group_display)

group_colors = "Color Configuration"
buy_color = input.color(color.green, "BUY Signal Color", group=group_colors)
sell_color = input.color(color.red, "SELL Signal Color", group=group_colors)
target_color = input.color(color.blue, "Target Color", group=group_colors)
stop_color = input.color(color.orange, "Stop Loss Color", group=group_colors)

// Signal Data Arrays (Manually input your CSV data here)
// Format: [timestamp, price, signal_type, confidence, target_price, stop_loss]
// Example: [timestamp("2025-01-15 10:00"), 0.45, "BUY", 0.85, 0.50, 0.42]

// BUY Signals Data (Replace with your actual data)
buy_timestamps = array.from(
    timestamp("2025-01-15 10:00"),
    timestamp("2025-01-20 14:30"),
    timestamp("2025-02-05 09:15")
)

buy_prices = array.from(0.45, 0.42, 0.48)
buy_confidences = array.from(0.85, 0.72, 0.91)
buy_targets = array.from(0.50, 0.47, 0.53)
buy_stops = array.from(0.42, 0.39, 0.45)

// SELL Signals Data (Replace with your actual data)
sell_timestamps = array.from(
    timestamp("2025-01-18 16:00"),
    timestamp("2025-01-25 11:45"),
    timestamp("2025-02-10 15:20")
)

sell_prices = array.from(0.52, 0.49, 0.55)
sell_confidences = array.from(0.78, 0.83, 0.76)
sell_targets = array.from(0.47, 0.44, 0.50)
sell_stops = array.from(0.55, 0.52, 0.58)

// Helper Functions
get_size_value() =>
    switch signal_size
        "Tiny" => size.tiny
        "Small" => size.small
        "Normal" => size.normal
        "Large" => size.large
        => size.small

get_confidence_text(conf) =>
    "Conf: " + str.tostring(math.round(conf * 100)) + "%"

// Plot BUY Signals
if show_buy_signals
    for i = 0 to array.size(buy_timestamps) - 1
        signal_time = array.get(buy_timestamps, i)
        signal_price = array.get(buy_prices, i)
        signal_conf = array.get(buy_confidences, i)
        signal_target = array.get(buy_targets, i)
        signal_stop = array.get(buy_stops, i)
        
        if barstate.islast and time >= signal_time
            // Plot BUY signal shape
            plotshape(true, "BUY Signal", shape.triangleup, location.belowbar, 
                     buy_color, get_size_value(), text="BUY")
            
            // Plot BUY label
            if show_labels
                label.new(signal_time, signal_price, 
                         "BUY\n" + get_confidence_text(signal_conf), 
                         color=buy_color, textcolor=color.white, 
                         style=label.style_label_up, size=get_size_value())
            
            // Plot entry line
            if show_lines
                line.new(signal_time, signal_price, signal_time + 1, signal_price, 
                        color=buy_color, width=2, style=line.style_solid)
            
            // Plot target price
            if show_targets and signal_target > 0
                line.new(signal_time, signal_price, signal_time + 1, signal_target, 
                        color=target_color, width=1, style=line.style_dashed)
                label.new(signal_time, signal_target, "T: " + str.tostring(signal_target), 
                         color=target_color, textcolor=color.white, 
                         style=label.style_label_left, size=size.tiny)
            
            // Plot stop loss
            if show_stops and signal_stop > 0
                line.new(signal_time, signal_price, signal_time + 1, signal_stop, 
                        color=stop_color, width=1, style=line.style_dotted)
                label.new(signal_time, signal_stop, "S: " + str.tostring(signal_stop), 
                         color=stop_color, textcolor=color.white, 
                         style=label.style_label_left, size=size.tiny)

// Plot SELL Signals
if show_sell_signals
    for i = 0 to array.size(sell_timestamps) - 1
        signal_time = array.get(sell_timestamps, i)
        signal_price = array.get(sell_prices, i)
        signal_conf = array.get(sell_confidences, i)
        signal_target = array.get(sell_targets, i)
        signal_stop = array.get(sell_stops, i)
        
        if barstate.islast and time >= signal_time
            // Plot SELL signal shape
            plotshape(true, "SELL Signal", shape.triangledown, location.abovebar, 
                     sell_color, get_size_value(), text="SELL")
            
            // Plot SELL label
            if show_labels
                label.new(signal_time, signal_price, 
                         "SELL\n" + get_confidence_text(signal_conf), 
                         color=sell_color, textcolor=color.white, 
                         style=label.style_label_down, size=get_size_value())
            
            // Plot entry line
            if show_lines
                line.new(signal_time, signal_price, signal_time + 1, signal_price, 
                        color=sell_color, width=2, style=line.style_solid)
            
            // Plot target price
            if show_targets and signal_target > 0
                line.new(signal_time, signal_price, signal_time + 1, signal_target, 
                        color=target_color, width=1, style=line.style_dashed)
                label.new(signal_time, signal_target, "T: " + str.tostring(signal_target), 
                         color=target_color, textcolor=color.white, 
                         style=label.style_label_left, size=size.tiny)
            
            // Plot stop loss
            if show_stops and signal_stop > 0
                line.new(signal_time, signal_price, signal_time + 1, signal_stop, 
                        color=stop_color, width=1, style=line.style_dotted)
                label.new(signal_time, signal_stop, "S: " + str.tostring(signal_stop), 
                         color=stop_color, textcolor=color.white, 
                         style=label.style_label_left, size=size.tiny)

// Signal Statistics Table
if barstate.islast
    var table stats_table = table.new(position.top_right, 2, 6, bgcolor=color.white, border_width=1)
    
    table.cell(stats_table, 0, 0, "Signal Statistics", text_color=color.black, text_size=size.normal)
    table.cell(stats_table, 1, 0, "", text_color=color.black)
    
    table.cell(stats_table, 0, 1, "Total BUY Signals", text_color=color.black, text_size=size.small)
    table.cell(stats_table, 1, 1, str.tostring(array.size(buy_timestamps)), text_color=color.black, text_size=size.small)
    
    table.cell(stats_table, 0, 2, "Total SELL Signals", text_color=color.black, text_size=size.small)
    table.cell(stats_table, 1, 2, str.tostring(array.size(sell_timestamps)), text_color=color.black, text_size=size.small)
    
    table.cell(stats_table, 0, 3, "Avg BUY Confidence", text_color=color.black, text_size=size.small)
    avg_buy_conf = array.avg(buy_confidences)
    table.cell(stats_table, 1, 3, str.tostring(math.round(avg_buy_conf * 100)) + "%", text_color=color.black, text_size=size.small)
    
    table.cell(stats_table, 0, 4, "Avg SELL Confidence", text_color=color.black, text_size=size.small)
    avg_sell_conf = array.avg(sell_confidences)
    table.cell(stats_table, 1, 4, str.tostring(math.round(avg_sell_conf * 100)) + "%", text_color=color.black, text_size=size.small)
    
    table.cell(stats_table, 0, 5, "Total Signals", text_color=color.black, text_size=size.small)
    total_signals = array.size(buy_timestamps) + array.size(sell_timestamps)
    table.cell(stats_table, 1, 5, str.tostring(total_signals), text_color=color.black, text_size=size.small)

// Background Information
if barstate.islast
    var table info_table = table.new(position.bottom_left, 1, 4, bgcolor=color.new(color.blue, 80), border_width=1)
    
    table.cell(info_table, 0, 0, "AI Trading Signals Verification", text_color=color.white, text_size=size.normal)
    table.cell(info_table, 0, 1, "1. Replace signal data arrays with your CSV data", text_color=color.white, text_size=size.small)
    table.cell(info_table, 0, 2, "2. Adjust display options as needed", text_color=color.white, text_size=size.small)
    table.cell(info_table, 0, 3, "3. Verify each signal against price action", text_color=color.white, text_size=size.small)

// ============================================================================
// USAGE INSTRUCTIONS:
// ============================================================================
// 1. Copy your CSV data from the AI Trading Engine export
// 2. Replace the signal arrays above with your actual data
// 3. Adjust the input parameters to customize display
// 4. Run the script to visualize signals on your chart
// 5. Manually verify each signal against actual price action
// 6. Document your findings for accuracy analysis
//
// CSV Format Expected:
// Timestamp, Symbol, Signal_Type, Action, Price, Target_Price, Stop_Loss, Confidence
// 2025-01-15 10:00, XRP, BUY, BUY, 0.45, 0.50, 0.42, 85
//
// For questions or support, refer to the TradingView Verification Guide
// ============================================================================






























































